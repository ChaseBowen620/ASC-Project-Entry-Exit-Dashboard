# Generated by Django 5.2.6 on 2025-09-20 02:06

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='SurveyResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_date', models.DateTimeField()),
                ('end_date', models.DateTimeField()),
                ('status', models.IntegerField()),
                ('progress', models.IntegerField()),
                ('duration_seconds', models.IntegerField()),
                ('finished', models.BooleanField()),
                ('recorded_date', models.DateTimeField()),
                ('response_id', models.CharField(max_length=100, unique=True)),
                ('distribution_channel', models.CharField(max_length=50)),
                ('user_language', models.CharField(max_length=10)),
                ('recaptcha_score', models.FloatField(blank=True, null=True)),
                ('survey_type', models.IntegerField(choices=[(1, 'Starting Project'), (2, 'Ending Project')], help_text='1 = Starting project, 2 = Ending project')),
                ('a_number', models.CharField(blank=True, max_length=20)),
                ('project_title', models.TextField(blank=True)),
                ('mentor_choice', models.IntegerField(blank=True, null=True)),
                ('mentor_other_text', models.TextField(blank=True)),
                ('mentor_name', models.CharField(blank=True, max_length=200)),
                ('is_first_project', models.BooleanField(blank=True, null=True)),
                ('topics_working_on', models.IntegerField(blank=True, null=True)),
                ('confidence_topics', models.IntegerField(blank=True, help_text='Scale 1-5', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('enough_resources', models.IntegerField(blank=True, help_text='Scale 1-5', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('hope_to_gain', models.TextField(blank=True)),
                ('additional_comments_starting', models.TextField(blank=True)),
                ('gained_learned', models.TextField(blank=True)),
                ('what_went_well', models.TextField(blank=True)),
                ('what_could_improve', models.TextField(blank=True)),
                ('topics_worked_on', models.IntegerField(blank=True, null=True)),
                ('hard_skills_improved', models.IntegerField(blank=True, help_text='Scale 1-5', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('soft_skills_improved', models.IntegerField(blank=True, help_text='Scale 1-5', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('confidence_job_placement', models.IntegerField(blank=True, help_text='Scale 1-5', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('rating_onboarding', models.IntegerField(blank=True, help_text='1=Poor, 2=Fair, 3=Excellent', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(3)])),
                ('rating_initiation', models.IntegerField(blank=True, help_text='1=Poor, 2=Fair, 3=Excellent', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(3)])),
                ('rating_mentorship', models.IntegerField(blank=True, help_text='1=Poor, 2=Fair, 3=Excellent', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(3)])),
                ('rating_team', models.IntegerField(blank=True, help_text='1=Poor, 2=Fair, 3=Excellent', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(3)])),
                ('rating_communications', models.IntegerField(blank=True, help_text='1=Poor, 2=Fair, 3=Excellent', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(3)])),
                ('rating_expectations', models.IntegerField(blank=True, help_text='1=Poor, 2=Fair, 3=Excellent', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(3)])),
                ('rating_sponsor', models.IntegerField(blank=True, help_text='1=Poor, 2=Fair, 3=Excellent', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(3)])),
                ('rating_workload', models.IntegerField(blank=True, help_text='1=Poor, 2=Fair, 3=Excellent', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(3)])),
                ('recommend_asc', models.IntegerField(blank=True, help_text='Likelihood to recommend ASC (1-5 scale)', null=True, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('additional_comments_ending', models.TextField(blank=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Survey Response',
                'verbose_name_plural': 'Survey Responses',
                'ordering': ['-recorded_date'],
            },
        ),
        migrations.CreateModel(
            name='SurveyChoice',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_id', models.CharField(max_length=50)),
                ('choice_value', models.IntegerField()),
                ('choice_text', models.CharField(max_length=200)),
                ('question_text', models.TextField()),
            ],
            options={
                'verbose_name': 'Survey Choice',
                'verbose_name_plural': 'Survey Choices',
                'unique_together': {('question_id', 'choice_value')},
            },
        ),
    ]
